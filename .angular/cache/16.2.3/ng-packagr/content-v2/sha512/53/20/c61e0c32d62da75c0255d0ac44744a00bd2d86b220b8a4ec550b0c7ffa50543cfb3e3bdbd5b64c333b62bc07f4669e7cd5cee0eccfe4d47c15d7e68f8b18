{"hash":"81953cc16a6f0856761e7be489f2e6cbd0b9fe00","fesm2022":[{"exports":["RowActionComponent","RowActionsModule"],"facadeModuleId":"/home/francois/Workspaces/hhangular/row-actions/dist/esm2022/hhangular-row-actions.mjs","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["/home/francois/Workspaces/hhangular/row-actions/dist/esm2022/lib/row-actions.component.mjs","/home/francois/Workspaces/hhangular/row-actions/dist/esm2022/lib/row-actions.module.mjs","/home/francois/Workspaces/hhangular/row-actions/dist/esm2022/public-api.mjs","/home/francois/Workspaces/hhangular/row-actions/dist/esm2022/hhangular-row-actions.mjs"],"name":"hhangular-row-actions","type":"chunk","dynamicImports":[],"fileName":"hhangular-row-actions.mjs","implicitlyLoadedBefore":[],"importedBindings":{"@angular/animations":["trigger","transition","style","animate"],"@angular/core":["*","Component","ChangeDetectionStrategy","HostBinding","Input","NgModule"],"rxjs":["BehaviorSubject","combineLatestWith","debounceTime","map"],"@angular/material/toolbar":["*","MatToolbarModule"],"@angular/cdk/overlay":["*","OverlayModule"],"@angular/common":["*","CommonModule"]},"imports":["@angular/animations","@angular/core","rxjs","@angular/material/toolbar","@angular/cdk/overlay","@angular/common"],"modules":{"/home/francois/Workspaces/hhangular/row-actions/dist/esm2022/lib/row-actions.component.mjs":{"code":"class RowActionComponent {\n    constructor(el) {\n        this.el = el;\n        this.overlayPositions = [{ originY: 'top', originX: 'end', overlayY: 'top', overlayX: 'end' }];\n        this.open$ = new BehaviorSubject(false);\n        this.hover$ = new BehaviorSubject(false);\n        // We're right\n        this.marginRight = 0;\n        this.flexGrow = 0;\n        // We're left\n        this.left = 0;\n        this.color = 'primary';\n        this.show$ = this.open$.pipe(combineLatestWith(this.hover$), debounceTime(100), map(([open, hover]) => open || hover));\n    }\n    ngAfterViewInit() {\n        const parentElement = this.el.nativeElement.parentElement;\n        const parentStyle = getComputedStyle(parentElement);\n        if (this.el.nativeElement.parentElement.children[0] === this.el.nativeElement) {\n            this.overlayPositions = [{ originY: 'top', originX: 'start', overlayY: 'top', overlayX: 'start' }];\n            this.flexGrow = 0;\n            this.left = -parseFloat(parentStyle.paddingLeft);\n        }\n        else if (this.el.nativeElement.parentElement.children[this.el.nativeElement.parentElement.children.length - 1] === this.el.nativeElement) {\n            this.overlayPositions = [{ originY: 'top', originX: 'end', overlayY: 'top', overlayX: 'end' }];\n            this.marginRight = -parseFloat(parentStyle.paddingRight);\n            ;\n            this.flexGrow = 1;\n        }\n    }\n    set open(open) {\n        this.open$.next(open);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.6\", ngImport: i0, type: RowActionComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.6\", type: RowActionComponent, selector: \"app-row-actions\", inputs: { color: \"color\", open: \"open\" }, host: { properties: { \"style.margin-right.px\": \"this.marginRight\", \"style.flex-grow\": \"this.flexGrow\", \"style.left.px\": \"this.left\" } }, ngImport: i0, template: `\n        <span class=\"actions-trigger\" cdkOverlayOrigin #trigger=\"cdkOverlayOrigin\"></span>\n        <ng-template cdkConnectedOverlay [cdkConnectedOverlayPositions]=\"overlayPositions\" [cdkConnectedOverlayOrigin]=\"trigger\" [cdkConnectedOverlayOpen]=\"!!(show$ | async)\">\n            <mat-toolbar class=\"actions-toolbar\" [color]=\"color\" (mouseenter)=\"hover$.next(true)\" (mouseleave)=\"hover$.next(false)\" @toolbarAppear>\n                <ng-content></ng-content>\n            </mat-toolbar>\n        </ng-template>\n    `, isInline: true, styles: [\".actions-toolbar{height:100%!important}.actions-trigger{display:flex;flex-grow:1}:host{position:relative;height:100%;margin-top:-2px;display:flex}\\n\"], dependencies: [{ kind: \"component\", type: i1.MatToolbar, selector: \"mat-toolbar\", inputs: [\"color\"], exportAs: [\"matToolbar\"] }, { kind: \"directive\", type: i2.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { kind: \"directive\", type: i2.CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }, { kind: \"pipe\", type: i3.AsyncPipe, name: \"async\" }], animations: [\n            trigger('toolbarAppear', [\n                transition(':enter', [\n                    style({ opacity: 0 }), animate(300)\n                ]),\n                transition(':leave', [\n                    animate(300, style({ opacity: 0 }))\n                ])\n            ])\n        ], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.6\", ngImport: i0, type: RowActionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'app-row-actions', template: `\n        <span class=\"actions-trigger\" cdkOverlayOrigin #trigger=\"cdkOverlayOrigin\"></span>\n        <ng-template cdkConnectedOverlay [cdkConnectedOverlayPositions]=\"overlayPositions\" [cdkConnectedOverlayOrigin]=\"trigger\" [cdkConnectedOverlayOpen]=\"!!(show$ | async)\">\n            <mat-toolbar class=\"actions-toolbar\" [color]=\"color\" (mouseenter)=\"hover$.next(true)\" (mouseleave)=\"hover$.next(false)\" @toolbarAppear>\n                <ng-content></ng-content>\n            </mat-toolbar>\n        </ng-template>\n    `, animations: [\n                        trigger('toolbarAppear', [\n                            transition(':enter', [\n                                style({ opacity: 0 }), animate(300)\n                            ]),\n                            transition(':leave', [\n                                animate(300, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ], changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".actions-toolbar{height:100%!important}.actions-trigger{display:flex;flex-grow:1}:host{position:relative;height:100%;margin-top:-2px;display:flex}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { marginRight: [{\n                type: HostBinding,\n                args: ['style.margin-right.px']\n            }], flexGrow: [{\n                type: HostBinding,\n                args: ['style.flex-grow']\n            }], left: [{\n                type: HostBinding,\n                args: ['style.left.px']\n            }], color: [{\n                type: Input\n            }], open: [{\n                type: Input\n            }] } });","originalLength":15146,"removedExports":[],"renderedExports":["RowActionComponent"],"renderedLength":6294},"/home/francois/Workspaces/hhangular/row-actions/dist/esm2022/lib/row-actions.module.mjs":{"code":"class RowActionsModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.6\", ngImport: i0, type: RowActionsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.6\", ngImport: i0, type: RowActionsModule, declarations: [RowActionComponent], imports: [CommonModule,\n            MatToolbarModule,\n            OverlayModule], exports: [RowActionComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.6\", ngImport: i0, type: RowActionsModule, imports: [CommonModule,\n            MatToolbarModule,\n            OverlayModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.6\", ngImport: i0, type: RowActionsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        MatToolbarModule,\n                        OverlayModule\n                    ],\n                    declarations: [\n                        RowActionComponent\n                    ],\n                    exports: [\n                        RowActionComponent\n                    ],\n                }]\n        }] });","originalLength":3254,"removedExports":[],"renderedExports":["RowActionsModule"],"renderedLength":1283},"/home/francois/Workspaces/hhangular/row-actions/dist/esm2022/public-api.mjs":{"code":"/*\n * Public API Surface of resizable\n */","originalLength":763,"removedExports":[],"renderedExports":[],"renderedLength":41},"/home/francois/Workspaces/hhangular/row-actions/dist/esm2022/hhangular-row-actions.mjs":{"code":"/**\n * Generated bundle index. Do not edit.\n */","originalLength":492,"removedExports":[],"renderedExports":[],"renderedLength":47}},"referencedFiles":[],"code":"import { trigger, transition, style, animate } from '@angular/animations';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, HostBinding, Input, NgModule } from '@angular/core';\nimport { BehaviorSubject, combineLatestWith, debounceTime, map } from 'rxjs';\nimport * as i1 from '@angular/material/toolbar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport * as i2 from '@angular/cdk/overlay';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass RowActionComponent {\n    constructor(el) {\n        this.el = el;\n        this.overlayPositions = [{ originY: 'top', originX: 'end', overlayY: 'top', overlayX: 'end' }];\n        this.open$ = new BehaviorSubject(false);\n        this.hover$ = new BehaviorSubject(false);\n        // We're right\n        this.marginRight = 0;\n        this.flexGrow = 0;\n        // We're left\n        this.left = 0;\n        this.color = 'primary';\n        this.show$ = this.open$.pipe(combineLatestWith(this.hover$), debounceTime(100), map(([open, hover]) => open || hover));\n    }\n    ngAfterViewInit() {\n        const parentElement = this.el.nativeElement.parentElement;\n        const parentStyle = getComputedStyle(parentElement);\n        if (this.el.nativeElement.parentElement.children[0] === this.el.nativeElement) {\n            this.overlayPositions = [{ originY: 'top', originX: 'start', overlayY: 'top', overlayX: 'start' }];\n            this.flexGrow = 0;\n            this.left = -parseFloat(parentStyle.paddingLeft);\n        }\n        else if (this.el.nativeElement.parentElement.children[this.el.nativeElement.parentElement.children.length - 1] === this.el.nativeElement) {\n            this.overlayPositions = [{ originY: 'top', originX: 'end', overlayY: 'top', overlayX: 'end' }];\n            this.marginRight = -parseFloat(parentStyle.paddingRight);\n            ;\n            this.flexGrow = 1;\n        }\n    }\n    set open(open) {\n        this.open$.next(open);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.6\", ngImport: i0, type: RowActionComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.6\", type: RowActionComponent, selector: \"app-row-actions\", inputs: { color: \"color\", open: \"open\" }, host: { properties: { \"style.margin-right.px\": \"this.marginRight\", \"style.flex-grow\": \"this.flexGrow\", \"style.left.px\": \"this.left\" } }, ngImport: i0, template: `\n        <span class=\"actions-trigger\" cdkOverlayOrigin #trigger=\"cdkOverlayOrigin\"></span>\n        <ng-template cdkConnectedOverlay [cdkConnectedOverlayPositions]=\"overlayPositions\" [cdkConnectedOverlayOrigin]=\"trigger\" [cdkConnectedOverlayOpen]=\"!!(show$ | async)\">\n            <mat-toolbar class=\"actions-toolbar\" [color]=\"color\" (mouseenter)=\"hover$.next(true)\" (mouseleave)=\"hover$.next(false)\" @toolbarAppear>\n                <ng-content></ng-content>\n            </mat-toolbar>\n        </ng-template>\n    `, isInline: true, styles: [\".actions-toolbar{height:100%!important}.actions-trigger{display:flex;flex-grow:1}:host{position:relative;height:100%;margin-top:-2px;display:flex}\\n\"], dependencies: [{ kind: \"component\", type: i1.MatToolbar, selector: \"mat-toolbar\", inputs: [\"color\"], exportAs: [\"matToolbar\"] }, { kind: \"directive\", type: i2.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { kind: \"directive\", type: i2.CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }, { kind: \"pipe\", type: i3.AsyncPipe, name: \"async\" }], animations: [\n            trigger('toolbarAppear', [\n                transition(':enter', [\n                    style({ opacity: 0 }), animate(300)\n                ]),\n                transition(':leave', [\n                    animate(300, style({ opacity: 0 }))\n                ])\n            ])\n        ], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.6\", ngImport: i0, type: RowActionComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'app-row-actions', template: `\n        <span class=\"actions-trigger\" cdkOverlayOrigin #trigger=\"cdkOverlayOrigin\"></span>\n        <ng-template cdkConnectedOverlay [cdkConnectedOverlayPositions]=\"overlayPositions\" [cdkConnectedOverlayOrigin]=\"trigger\" [cdkConnectedOverlayOpen]=\"!!(show$ | async)\">\n            <mat-toolbar class=\"actions-toolbar\" [color]=\"color\" (mouseenter)=\"hover$.next(true)\" (mouseleave)=\"hover$.next(false)\" @toolbarAppear>\n                <ng-content></ng-content>\n            </mat-toolbar>\n        </ng-template>\n    `, animations: [\n                        trigger('toolbarAppear', [\n                            transition(':enter', [\n                                style({ opacity: 0 }), animate(300)\n                            ]),\n                            transition(':leave', [\n                                animate(300, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ], changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".actions-toolbar{height:100%!important}.actions-trigger{display:flex;flex-grow:1}:host{position:relative;height:100%;margin-top:-2px;display:flex}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { marginRight: [{\n                type: HostBinding,\n                args: ['style.margin-right.px']\n            }], flexGrow: [{\n                type: HostBinding,\n                args: ['style.flex-grow']\n            }], left: [{\n                type: HostBinding,\n                args: ['style.left.px']\n            }], color: [{\n                type: Input\n            }], open: [{\n                type: Input\n            }] } });\n\nclass RowActionsModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.6\", ngImport: i0, type: RowActionsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.6\", ngImport: i0, type: RowActionsModule, declarations: [RowActionComponent], imports: [CommonModule,\n            MatToolbarModule,\n            OverlayModule], exports: [RowActionComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.6\", ngImport: i0, type: RowActionsModule, imports: [CommonModule,\n            MatToolbarModule,\n            OverlayModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.6\", ngImport: i0, type: RowActionsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        MatToolbarModule,\n                        OverlayModule\n                    ],\n                    declarations: [\n                        RowActionComponent\n                    ],\n                    exports: [\n                        RowActionComponent\n                    ],\n                }]\n        }] });\n\n/*\n * Public API Surface of resizable\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RowActionComponent, RowActionsModule };\n//# sourceMappingURL=hhangular-row-actions.mjs.map\n","map":null,"preliminaryFileName":"hhangular-row-actions.mjs","sourcemapFileName":"hhangular-row-actions.mjs.map"},{"fileName":"hhangular-row-actions.mjs.map","needsCodeReference":false,"source":"{\"version\":3,\"file\":\"hhangular-row-actions.mjs\",\"sources\":[\"../../src/lib/row-actions.component.ts\",\"../../src/lib/row-actions.module.ts\",\"../../src/public-api.ts\",\"../../src/hhangular-row-actions.ts\"],\"sourcesContent\":[\"import { animate, style, transition, trigger } from '@angular/animations';\\nimport { ConnectedPosition } from '@angular/cdk/overlay';\\nimport { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, HostBinding, Input } from '@angular/core';\\nimport { BehaviorSubject, Observable, combineLatestWith, debounceTime, map } from 'rxjs';\\n\\n\\n@Component({\\n    selector: 'app-row-actions',\\n    template: `\\n        <span class=\\\"actions-trigger\\\" cdkOverlayOrigin #trigger=\\\"cdkOverlayOrigin\\\"></span>\\n        <ng-template cdkConnectedOverlay [cdkConnectedOverlayPositions]=\\\"overlayPositions\\\" [cdkConnectedOverlayOrigin]=\\\"trigger\\\" [cdkConnectedOverlayOpen]=\\\"!!(show$ | async)\\\">\\n            <mat-toolbar class=\\\"actions-toolbar\\\" [color]=\\\"color\\\" (mouseenter)=\\\"hover$.next(true)\\\" (mouseleave)=\\\"hover$.next(false)\\\" @toolbarAppear>\\n                <ng-content></ng-content>\\n            </mat-toolbar>\\n        </ng-template>\\n    `,\\n    styles: [`\\n        .actions-toolbar {\\n            height: 100% !important;\\n        }\\n        .actions-trigger {\\n            display: flex;\\n            flex-grow: 1;\\n        }\\n        :host {\\n            position: relative;\\n            height: 100%;\\n            margin-top: -2px;\\n            display: flex;\\n        }\\n   `],\\n    animations: [\\n        trigger('toolbarAppear', [\\n            transition(':enter', [\\n                style({ opacity: 0 }), animate(300)\\n            ]),\\n            transition(':leave', [\\n                animate(300, style({ opacity: 0 }))\\n            ])\\n        ])\\n    ],\\n    changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class RowActionComponent implements AfterViewInit {\\n\\n    overlayPositions: ConnectedPosition[] = [{ originY: 'top', originX: 'end', overlayY: 'top', overlayX: 'end' }];\\n\\n    open$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\\n    hover$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\\n    show$: Observable<boolean>;\\n\\n    constructor(\\n        private el: ElementRef,\\n    ) {\\n        this.show$ = this.open$.pipe(\\n            combineLatestWith(this.hover$),\\n            debounceTime(100),\\n            map(([open, hover]: [boolean, boolean]) => open || hover)\\n        );\\n\\n    }\\n    ngAfterViewInit(): void {\\n        const parentElement = this.el.nativeElement.parentElement;\\n        const parentStyle = getComputedStyle(parentElement);\\n        if (this.el.nativeElement.parentElement.children[0] === this.el.nativeElement) {\\n            this.overlayPositions = [{originY: 'top', originX: 'start', overlayY: 'top', overlayX: 'start'}];\\n            this.flexGrow = 0;\\n            this.left = -parseFloat(parentStyle.paddingLeft);\\n        } else if (this.el.nativeElement.parentElement.children[this.el.nativeElement.parentElement.children.length - 1] === this.el.nativeElement) {\\n            this.overlayPositions = [{ originY: 'top', originX: 'end', overlayY: 'top', overlayX: 'end' }];\\n            this.marginRight = -parseFloat(parentStyle.paddingRight);;\\n            this.flexGrow = 1;\\n        }\\n    }\\n\\n    // We're right\\n    @HostBinding('style.margin-right.px')\\n    marginRight: number = 0;\\n    @HostBinding('style.flex-grow')\\n    flexGrow: number = 0;\\n\\n    // We're left\\n    @HostBinding('style.left.px')\\n    left: number = 0;\\n\\n\\n    @Input()\\n    color: string = 'primary';\\n\\n    @Input()\\n    set open(open: boolean) {\\n        this.open$.next(open);\\n    }\\n}\\n\",\"import { CommonModule } from '@angular/common';\\nimport { NgModule } from '@angular/core';\\nimport { RowActionComponent } from './row-actions.component';\\nimport { MatToolbarModule } from '@angular/material/toolbar';\\nimport { OverlayModule } from '@angular/cdk/overlay';\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    MatToolbarModule,\\n    OverlayModule\\n    ],\\n  declarations: [\\n    RowActionComponent\\n  ],\\n  exports: [\\n    RowActionComponent\\n  ],\\n})\\nexport class RowActionsModule {\\n}\\n\",\"/*\\n * Public API Surface of resizable\\n */\\n\\nexport {RowActionComponent} from './lib/row-actions.component';\\nexport {RowActionsModule} from './lib/row-actions.module';\\n\",\"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './public-api';\\n\"],\"names\":[],\"mappings\":\"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\"}","type":"asset"}]}